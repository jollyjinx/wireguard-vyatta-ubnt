tag:
type: txt
help: Peer public key

val_help: Base64 encoded public key

syntax:expression: pattern $VAR(@) "^[0-9a-zA-Z\+/]{43}=$" ;
	"Key is not valid 44-character (32-bytes) base64"

commit:expression: exec "${vyatta_sbindir}/vyatta-check-allowed-ips.pl --intf $VAR(../@) --peer $VAR(@)"


begin:  echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: begin: action: $COMMIT_ACTION arg: $VAR(@)" >> /tmp/wg.log

create: echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: create:action: $COMMIT_ACTION arg: $VAR(@)" >> /tmp/wg.log

delete: echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: delete:action: $COMMIT_ACTION arg: $VAR(@)" >> /tmp/wg.log


end:
        echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: end: action: $COMMIT_ACTION arg: $VAR(@)" >> /tmp/wg.log
        if [ "$COMMIT_ACTION" = DELETE ] || [ -n "$VAR(./disable)" ];
        then
          if [[ $(sudo wg show "$VAR(../@)" peers) == *"$VAR(@)"* ]]; 
          then
            echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: end.delete: $VAR(../@) route allowed: $VAR(../route-allowed-ips/@) " >> /tmp/wg.log
            if [ "$VAR(../route-allowed-ips/@)" == "true" ];
            then
              echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: end.routeallowed" >> /tmp/wg.log
              for allowed_ip in $(sudo wg show $VAR(../@) allowed-ips | awk '$1=="$VAR(@)" {$1=""; print $0}');
              do
                echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def deleting:$allowed_ip" >>/tmp/wg.log
                sudo ip route delete "$allowed_ip"
              done
            fi
            echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: end.peer remove" >> /tmp/wg.log
            sudo wg set $VAR(../@) peer "$VAR(@)" remove
            echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: end.peer removed" >> /tmp/wg.log
          fi
        else
          echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: setting sudo wg set $VAR(../@) peer $VAR(@)" >> /tmp/wg.log
          sudo wg set $VAR(../@) peer $VAR(@)

          ALLOWED=$(echo "$VAR(./allowed-ips/@)" | tr ' ' ',' | tr -d "'")
          sudo wg set $VAR(../@) peer $VAR(@) allowed-ips "$ALLOWED"

          echo $(date|sed -e 's/\n//;') "wireguard/node.tag/peer/node.def: sudo wg set $VAR(../@) peer $VAR(@) allowed-ips "$ALLOWED"" >> /tmp/wg.log


          if [ -n "$VAR(./persistent-keepalive)" ]; then
            sudo wg set $VAR(../@) peer $VAR(@) persistent-keepalive $VAR(./persistent-keepalive/@)
          else
            sudo wg set $VAR(../@) peer $VAR(@) persistent-keepalive 0
          fi

          if [ -n "$VAR(./preshared-key)" ]; then
            if [[ "$VAR(./preshared-key/@)" =~ ^[0-9a-zA-Z/+]{43}=$ ]]; then
              echo $VAR(./preshared-key/@) | sudo wg set $VAR(../@) peer $VAR(@) preshared-key /proc/self/fd/0
            else
              sudo wg set $VAR(../@) peer $VAR(@) preshared-key $VAR(./preshared-key/@)
            fi
          else
            sudo wg set $VAR(../@) peer $VAR(@) preshared-key /dev/null
          fi
        fi

